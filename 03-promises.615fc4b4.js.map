{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAG3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAS,CAACH,WAAUC,UAErBG,EAAO,CAACJ,WAAUC,S,GAElBA,E,IAXkBN,SAASC,cAAc,mBAe/Ba,iBAAiB,SAE9B,SAAqBC,GACnBA,EAAMC,iBAIN,IAHA,IAAIC,EAAQC,SAASnB,GACjBoB,EAAOD,SAAShB,EAAUkB,OAC1BC,EAASH,SAASf,EAAYiB,OACzBE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElClB,EADekB,EAAI,EACKL,GAAOM,MAAK,SAAAC,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAC9CmB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAACuB,cAAc,G,IACrFC,OAAM,SAAAN,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACnBmB,EAAA5B,GAAS6B,OAAOK,QAAQ,oBAAmCH,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAACuB,cAAc,G,IAEvFZ,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst delayInput = document.querySelector('[name=\"delay\"]')\nconst stepInput = document.querySelector('[name=\"step\"]')\nconst amountInput = document.querySelector('[name=\"amount\"]')\nconst submitButton = document.querySelector('[type=\"submit\"]')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve ({position, delay})\n  } else {\n   reject({position, delay})\n  }\n}, delay)\n  })\n}\n\nsubmitButton.addEventListener('click', handleClick)\n\nfunction handleClick(event) {\n  event.preventDefault()\n  let delay = parseInt(delayInput)\n  let step = parseInt(stepInput.value)\n  let amount = parseInt(amountInput.value)\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1\n    createPromise(position, delay).then(({position, delay}) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {clickToClose: true})\n    }).catch(({position, delay}) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {clickToClose: true})\n    })\n    delay += step\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","step","value","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","clickToClose","catch","failure"],"version":3,"file":"03-promises.615fc4b4.js.map"}